apiVersion: apps/v1
kind: Deployment
metadata:
  name: sync-app
  namespace: postgres-starrocks-sync
  labels:
    app: sync-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sync-app
  template:
    metadata:
      labels:
        app: sync-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: sync-app
        image: postgres-starrocks-sync:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 9090
          name: metrics
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sync-secrets
              key: postgres-password
        - name: STARROCKS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sync-secrets
              key: starrocks-password
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: sync-secrets
              key: sentry-dsn
              optional: true
        - name: ALERT_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: sync-secrets
              key: alert-webhook-url
              optional: true
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: sync-secrets
              key: slack-webhook
              optional: true
        envFrom:
        - configMapRef:
            name: sync-config
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: config-volume
        configMap:
          name: sync-config
      - name: logs-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: sync-app-service
  namespace: postgres-starrocks-sync
  labels:
    app: sync-app
spec:
  selector:
    app: sync-app
  ports:
  - name: health
    port: 8080
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sync-app-hpa
  namespace: postgres-starrocks-sync
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sync-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sync-app-pdb
  namespace: postgres-starrocks-sync
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: sync-app
